# wml_credentials will be different for CPD as platform and CPD as a Service(CPDaas)
# If deploy to CPDaas, please fully comment out option 1 and uncomment option 2.

## Option 1) for CPD as platform
wml_credentials:
  # Method 1) username and password
  username: admin
  password: DFjUyZiekSiK

  # Method 2) using access_token instead of username/password
  # how to generate access_token, refer to:
  # CPD3.5: https://www.ibm.com/docs/en/cloud-paks/cp-data/3.5.0?topic=overview-authentication
  # CPD4.0: https://www.ibm.com/docs/en/cloud-paks/cp-data/4.0?topic=resources-generating-authorization-token
  # CPD4.5: https://www.ibm.com/docs/en/cloud-paks/cp-data/4.5.x?topic=resources-generating-authorization-token-api-key
  # Also in CPD Watson Studio, simply run: user_token = os.environ["USER_ACCESS_TOKEN"]
  # "token": user_token

  # Method 3) using apikey instead of username/password
  # how to generate apikey, refer to:
  # CPD3.5: https://www.ibm.com/docs/en/cloud-paks/cp-data/3.5.0?topic=started-generating-api-keys#api-keys__platform
  # CPD4.0: https://www.ibm.com/docs/en/cloud-paks/cp-data/4.0?topic=steps-generating-api-keys
  # CPD4.5: https://www.ibm.com/docs/en/cloud-paks/cp-data/4.5.x?topic=steps-generating-api-keys
  # "apikey": api_key

  instance_id: openshift
  url: https://cpd-cpd-instance.itzroks-663002388p-n5rkp2-6ccd7f378ae819553d37d5f2ee142bd6-0000.au-syd.containers.appdomain.cloud
  version: '4.6'

## Option 2) for CPD as a service provided by https://dataplatform.cloud.ibm.com/
## A good learning video in: https://dataplatform.cloud.ibm.com/docs/content/wsj/analyze-data/ml-samples-overview.html
#wml_credentials:
#
#  #  How to find URL, refer to https://cloud.ibm.com/apidocs/machine-learning#endpoint-url, you will find:
#  #  Dallas: https://us-south.ml.cloud.ibm.com
#  #  London - https://eu-gb.ml.cloud.ibm.com
#  #  Frankfurt - https://eu-de.ml.cloud.ibm.com
#  #  Tokyo - https://jp-tok.ml.cloud.ibm.com
#  #url: https://us-south.ml.cloud.ibm.com
#  url: https://jp-tok.ml.cloud.ibm.com
#
#  # Authentication: https://dataplatform.cloud.ibm.com/docs/content/wsj/analyze-data/ml-authentication.html
#  apikey: mPhmEnNRY4MAKwCjtKNItdFo2NgbVwiJhb8GjZhubdsafd

prj_info:
  code_dir: ../code_example_to_be_deployed
  main_file: main_with_input_output.py

deployment_info:
  # self-defined function name
  function_name: code_example_to_be_deployed

  # how to create deployment space, refer to:
  # CPD3.5: https://www.ibm.com/docs/en/cloud-paks/cp-data/3.5.0?topic=functions-deployment-spaces#create
  # CPD4.0: https://www.ibm.com/docs/en/cloud-paks/cp-data/4.0?topic=spaces-creating-deployment
  # CPD4.5: https://www.ibm.com/docs/en/cloud-paks/cp-data/4.5.x?topic=spaces-creating-deployment
  space_id: 81b0b2d2-37b3-448c-a2dd-ad5c76459f30

  # True: replace deployment if same deployment name has been found
  # False: quit the deployment if same deployment name has been found
  force_2_update: True   # default value: False

  # 2 different deploy_modes:
  # 1) online: online API
  # 2) batch_job: scheduled upon requests
  deploy_mode: batch_job

  # hardware spec: refer to:https://dataplatform.cloud.ibm.com/docs/content/wsj/analyze-data/deploy-batch-details.html
  # Size 	Hardware definition
  # XS 	1 CPU and 4 GB RAM
  # S 	2 CPU and 8 GB RAM
  # M 	4 CPU and 16 GB RAM
  # ML 	4 CPU and 32 GB RAM
  # L 	8 CPU and 32 GB RAM
  # XL 	16 CPU and 64 GB RAM
  hardware_spec: M

  # enable scalability when multiple nodes are needed
  num_nodes: 1

  # Define runtime. Must have '' in the string.
  # For cpd3.5, it can be: 'default_py3.7'
  # For cpd4.x, it can be: 'runtime-22.1-py3.9'
  runtime: 'codegen-transformers'

  # if enable_stdout is False, no stdout info will be shown during a successful online/batch job execution
  # for online application, we may want to disable the stdout to reduce the unnecessary traffic
  # for batch application, recommend to enable stdout since we can get job running output from stdout
  enable_stdout: True

#  If no smtp email function, please either comment out whole below section,
#  or set "False" to "send_email_when_successful" and "send_email_when_fail"
#email_setting:
 # send_email_when_successful: True # True, False. Setting "False" if not want to receive email
 # send_email_when_fail: True # True, False. Setting "False" if not want to receive email
 # smtp_server: ap.relay.ibm.com
 # sender: 
 # receivers: ['jbtang@au1.ibm.com', 'bennytang2008@gmail.com']


